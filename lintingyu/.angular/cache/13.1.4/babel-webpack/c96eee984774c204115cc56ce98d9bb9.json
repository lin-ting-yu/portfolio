{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/pageBase/_service/animation-frame.service\";\n\nconst _c0 = function (a0) {\n  return {\n    \"active\": a0\n  };\n};\n\nfunction SelectPintListComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 7);\n    i0.ɵɵlistener(\"click\", function SelectPintListComponent_li_6_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.setActive(i_r2);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c0, i_r2 === ctx_r0.active));\n  }\n}\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"width\": a0,\n    \"height\": a1\n  };\n};\n\nexport let SelectPintListComponent = /*#__PURE__*/(() => {\n  class SelectPintListComponent {\n    constructor(anFrame) {\n      this.anFrame = anFrame;\n      this.pointLength = 3;\n      this.active = 0;\n      this.arrowSize = 4;\n      this.onClick = new EventEmitter();\n      this.forNgForArray = [];\n      this.svgSizeHeight = 15;\n      this.lineLength = 30; // 點間距\n\n      this.svgGap = 12; // 線條座標array\n\n      this.pointsArray = []; // 線條座標array 轉字串\n\n      this.points = ''; // 箭頭座標array\n\n      this.arrowArray = []; // 箭頭座標array 轉字串\n\n      this.arrow = ''; // 給sin計算波用\n\n      this.countYMove = 0; // 方向及速度\n\n      this.speed = 2; // 線條初始中間高\n\n      this.y = (this.svgSizeHeight - 1) / 2 + 1;\n    }\n\n    lineYMove() {\n      for (let point = 0; point <= this.lineLength - 2; point++) {\n        this.pointsArray[point][1] = this.pointsArray[point + 1][1];\n      }\n\n      this.pointsArray[this.lineLength - 1][1] = this.y + Math.sin(++this.countYMove / 5);\n    }\n\n    lineXMove() {\n      let EndPosX = 40 + this.active * this.svgGap + this.active * this.svgSizeHeight - 8;\n      let nowX = this.pointsArray[this.lineLength - 1][0];\n\n      if (nowX !== EndPosX) {\n        for (let point = 0; point <= this.lineLength - 2; point++) {\n          this.pointsArray[point][0] = this.pointsArray[point + 1][0];\n        }\n\n        this.speed = (EndPosX - nowX) / Math.abs(EndPosX - nowX);\n        this.pointsArray[this.lineLength - 1][0] += this.speed;\n      } else {\n        this.speed = Math.abs(this.speed);\n\n        for (let point = 0; point <= this.lineLength - 2; point++) {\n          if (EndPosX - this.pointsArray[point][0] !== this.lineLength - point) {\n            this.pointsArray[point][0] -= this.speed;\n          }\n        }\n      }\n    }\n\n    arrowMove() {\n      let nowX = this.pointsArray[this.lineLength - 1][0];\n      let nowY = this.pointsArray[this.lineLength - 1][1];\n      this.arrowArray[1] = [nowX, nowY];\n\n      if (this.speed > 0) {\n        this.arrowArray[0] = [nowX - this.arrowSize, nowY - this.arrowSize];\n        this.arrowArray[2] = [nowX - this.arrowSize, nowY + this.arrowSize];\n      } else {\n        this.arrowArray[0] = [nowX + this.arrowSize, nowY - this.arrowSize];\n        this.arrowArray[2] = [nowX + this.arrowSize, nowY + this.arrowSize];\n      }\n    }\n\n    setActive(i) {\n      this.active = i;\n      this.onClick.emit(i);\n    }\n\n    initWidth() {\n      if (this.pointLength > 1) {\n        this.svgSizeWidth = this.pointLength * this.svgSizeHeight + // 點的總寬度\n        (this.pointLength - 1) * this.svgGap + // 間距的總寬度\n        40; // 選取間距的寬度\n      } else {\n        this.svgSizeWidth = this.pointLength * this.svgSizeHeight + 40;\n      }\n    }\n\n    initPointsArray() {\n      for (let x = 1; x <= this.lineLength; x++) {\n        this.pointsArray.push([x, this.y]);\n      }\n    }\n\n    setPointsArrayToPoints() {\n      this.points = '';\n      this.pointsArray.forEach(point => {\n        this.points += point + ' ';\n      });\n    }\n\n    setArrowArrayToArrow() {\n      this.arrow = '';\n      this.arrowArray.forEach(point => {\n        this.arrow += point + ' ';\n      });\n    }\n\n    initArrowArray() {\n      this.arrowArray = [[this.lineLength - this.arrowSize, this.y - this.arrowSize], [this.lineLength, this.y], [this.lineLength - this.arrowSize, this.y + this.arrowSize]];\n    }\n\n    animation() {\n      this.lineYMove();\n      this.lineXMove();\n      this.arrowMove();\n      this.setPointsArrayToPoints();\n      this.setArrowArrayToArrow();\n    }\n\n    ngOnInit() {\n      this.forNgForArray.length = this.pointLength;\n      this.initWidth();\n      this.initPointsArray();\n      this.initArrowArray();\n    }\n\n    ngAfterViewInit() {\n      setTimeout(() => {\n        this.anFrame.bindingAniamtionFrame(() => this.animation());\n      }, 0);\n    } // 關閉動畫\n\n\n    ngOnDestroy() {\n      this.anFrame.unbindingAniamtionFrame();\n    }\n\n  }\n\n  SelectPintListComponent.ɵfac = function SelectPintListComponent_Factory(t) {\n    return new (t || SelectPintListComponent)(i0.ɵɵdirectiveInject(i1.AnimationFrameService));\n  };\n\n  SelectPintListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SelectPintListComponent,\n    selectors: [[\"app-select-pint-list\"]],\n    inputs: {\n      pointLength: \"pointLength\",\n      active: \"active\",\n      arrowSize: \"arrowSize\"\n    },\n    outputs: {\n      onClick: \"onClick\"\n    },\n    decls: 7,\n    vars: 10,\n    consts: [[1, \"select-pint-list-content\", 3, \"ngStyle\"], [1, \"ballSvg\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", 1, \"line\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", 1, \"arrow\"], [1, \"dots\"], [1, \"dot-ul\"], [\"class\", \"dot-li\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"dot-li\", 3, \"ngClass\", \"click\"]],\n    template: function SelectPintListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(1, \"svg\", 1);\n        i0.ɵɵelement(2, \"polyline\", 2);\n        i0.ɵɵelement(3, \"polyline\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"ul\", 5);\n        i0.ɵɵtemplate(6, SelectPintListComponent_li_6_Template, 1, 3, \"li\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(7, _c1, ctx.svgSizeWidth + \"px\", ctx.svgSizeHeight + \"px\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"viexbox\", \"0 0 \" + ctx.svgSizeWidth + \" \" + ctx.svgSizeHeight)(\"width\", ctx.svgSizeWidth)(\"height\", ctx.svgSizeHeight);\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"points\", ctx.points);\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"points\", ctx.arrow);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.forNgForArray);\n      }\n    },\n    styles: [\".select-pint-list-content[_ngcontent-%COMP%]{position:relative}.select-pint-list-content[_ngcontent-%COMP%]   .ballSvg[_ngcontent-%COMP%], .select-pint-list-content[_ngcontent-%COMP%]   .dots[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;top:0;left:0}.select-pint-list-content[_ngcontent-%COMP%]   .ballSvg[_ngcontent-%COMP%]   polyline[_ngcontent-%COMP%]{stroke:#000;stroke-width:2px;fill:transparent}.select-pint-list-content[_ngcontent-%COMP%]   .dots[_ngcontent-%COMP%]   .dot-ul[_ngcontent-%COMP%]{display:flex}.select-pint-list-content[_ngcontent-%COMP%]   .dots[_ngcontent-%COMP%]   .dot-ul[_ngcontent-%COMP%]   .dot-li[_ngcontent-%COMP%]{width:15px;height:15px;position:relative;transition:1s;cursor:pointer}.select-pint-list-content[_ngcontent-%COMP%]   .dots[_ngcontent-%COMP%]   .dot-ul[_ngcontent-%COMP%]   .dot-li[_ngcontent-%COMP%]:before{display:block;content:\\\"\\\";width:100%;height:100%;box-sizing:border-box;border:solid 2px #73F28D;border-radius:50%;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);transition:.5s}@media screen and (max-width: 1550px){.select-pint-list-content[_ngcontent-%COMP%]   .dots[_ngcontent-%COMP%]   .dot-ul[_ngcontent-%COMP%]   .dot-li[_ngcontent-%COMP%]:before{width:90%;height:90%}}.select-pint-list-content[_ngcontent-%COMP%]   .dots[_ngcontent-%COMP%]   .dot-ul[_ngcontent-%COMP%]   .dot-li[_ngcontent-%COMP%] + .dot-li[_ngcontent-%COMP%]{margin-left:12px}.select-pint-list-content[_ngcontent-%COMP%]   .dots[_ngcontent-%COMP%]   .dot-ul[_ngcontent-%COMP%]   .dot-li[_ngcontent-%COMP%] + .dot-li.active[_ngcontent-%COMP%]{margin-left:52px}.select-pint-list-content[_ngcontent-%COMP%]   .dots[_ngcontent-%COMP%]   .dot-ul[_ngcontent-%COMP%]   .dot-li[_ngcontent-%COMP%]:hover:before{width:110%;height:110%}@media screen and (max-width: 1550px){.select-pint-list-content[_ngcontent-%COMP%]   .dots[_ngcontent-%COMP%]   .dot-ul[_ngcontent-%COMP%]   .dot-li[_ngcontent-%COMP%]:hover:before{width:100%;height:100%}}.select-pint-list-content[_ngcontent-%COMP%]   .dots[_ngcontent-%COMP%]   .dot-ul[_ngcontent-%COMP%]   .dot-li.active[_ngcontent-%COMP%]{margin-left:40px}.select-pint-list-content[_ngcontent-%COMP%]   .dots[_ngcontent-%COMP%]   .dot-ul[_ngcontent-%COMP%]   .dot-li.active[_ngcontent-%COMP%]:before{background-color:#73f28d}\"]\n  });\n  return SelectPintListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}