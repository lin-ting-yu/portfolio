{"ast":null,"code":"let linFillData = ['25.422,26.454 13.252,68.244 2.221,106.131 1.915,115.9 8.121,121.599 ' + '48.521,133.301 92.379,145.716 95.534,144.393 95.94,140.832 64.393,83.821 32.646,26.454 28.578,23.299', '124.128,61.052 119.243,63.697 116.293,69.702 118.883,105.06 121.786,144.698 ' + '126.062,149.48 131.963,150.905 146.311,149.684 149.975,146.834 151.705,142.052 148.491,105.06 145.293,68.277 142.038,61.357 135.321,59.933', '127.893,1.625 123.342,17.238 119.143,31.643 118.837,35.51 120.669,37.749 ' + '134.98,41.838 153.436,47.11 155.063,46.907 155.267,45.584 142.033,21.82 130.844,1.726 129.318,0.2', '172.668,44.974 175.517,45.178 210.041,73.067 243.289,99.924 249.395,101.349 ' + '250.209,97.685 247.039,64.933 244.714,40.904 246.545,35.001 251.633,31.746 263.844,30.523 269.339,32.763 272.392,37.647 ' + '276.571,75.446 281.55,120.479 280.329,127.602 274.834,132.283 234.37,136.543 189.764,141.238 183.047,138.389 180.401,135.133 ' + '176.188,95.162 171.242,48.23'];\nlet linStrokeData = ['18.301,51.468 21.563,39.401 24.828,27.333 28.016,20.655 ' + '33.783,17.922 40.006,21.262 43.65,27.486 48.896,36.659 53.592,44.865 58.084,52.716 63.535,62.247 69.434,73.039 75.98,85.014 ' + '82.199,96.39 88.428,107.783 93.438,115.296 98.447,122.81 104.975,135.106 115.75,144.669 133.965,149.222 151.27,147.705 ' + '165.842,140.418 173.736,129.641 170.623,91.314 169.486,77.314 168.414,64.102 167.512,52.987 166.904,44.334 169.182,35.531 ' + '175.254,37.048 181.932,41.451 192.938,53.137 198.076,58.596 203.941,64.826 212.9,72.903 221.701,80.84 230.568,88.836 ' + '239.461,96.854 254.109,112.261 261.457,119.99 268.758,127.667 275.131,131.766 280.748,131.007 282.57,126.302 282.418,120.23 ' + '279.686,96.854 276.953,73.478 276.346,62.397 275.738,51.316 275.738,39.401 275.738,27.486 275.131,21.262 270.578,15.494 ' + '264.811,14.28 259.041,14.583 252.061,15.95 245.078,17.315 240.979,20.655 239.309,25.208 239.006,28.7 238.701,32.191 ', '0.895,112.843 1.502,116.993 3.324,121.141 9.598,126.201 ' + '17.289,129.641 34.086,134.499 50.885,139.356 62.826,141.785 74.768,144.212 82.459,145.934 89.945,149.071 99.256,150.083 ' + '107.555,150.386 110.994,149.678 113.02,145.528 113.625,135.004 113.221,121.545 112.512,106.771 111.805,91.997 113.02,81.574 ' + '115.65,73.782 122.125,70.34 131.031,70.139 138.014,71.656 143.781,74.591 148.031,82.586 148.234,91.592 149.145,103.229 ' + '152.686,112.843 156.734,122.051 162.604,129.844 169.383,133.688 177.176,135.106 189.117,135.409 201.059,135.713 ' + '214.01,135.51 226.963,135.308 235.363,134.094 242.953,131.26 247.809,125.29 249.631,118.509 248.721,105.557 245.988,90.985 ' + '244.268,78.639 242.547,66.293', '113.523,22.679 113.625,19.212 114.436,15.595 ' + '116.813,9.776 119.887,3.464 122.125,1.074 125.363,0.719 128.691,2.97 130.93,6.588 134.117,12.559 137.307,18.529 ' + '140.24,23.335 143.176,28.143 146.488,32.646 148.234,36.745 148.006,40.045 146.211,41.704', '142.063,41.906 140.303,41.982 138.115,41.5 ' + '136.193,40.843 134.08,40.16 129.904,39.44 125.77,38.364 121.975,37.454 118.18,36.542 115.902,35.833 114.133,34.215 ' + '113.512,32.722 113.361,30.711'];\n\nfunction toNumberData(array) {\n  return array.map(item => {\n    return item.split(/\\s/).map(dot => {\n      return dot.split(',').map(pos => {\n        return parseFloat(pos);\n      });\n    });\n  });\n}\n\nlinFillData = toNumberData(linFillData);\nlinStrokeData = toNumberData(linStrokeData);\nexport { linFillData, linStrokeData };","map":null,"metadata":{},"sourceType":"module"}