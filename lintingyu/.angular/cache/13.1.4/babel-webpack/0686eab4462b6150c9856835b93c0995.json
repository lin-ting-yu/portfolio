{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let RouterEventService = /*#__PURE__*/(() => {\n  class RouterEventService {\n    constructor(activatedRoute, router) {\n      this.activatedRoute = activatedRoute;\n      this.router = router;\n    }\n\n    getPathName() {\n      if (this.router.url === \"/\" || this.router.url === \"\") {\n        return '';\n      }\n\n      return this.router.url.match(/\\/([^?]*)/)[1];\n    }\n\n    getUrl() {\n      return this.router.url;\n    }\n\n    linkClick(path, queryParams, wait = true, time = 300) {\n      if (this.router.url === '/' + path) {\n        let scrollToTop = setInterval(() => {\n          let s = window.pageYOffset + (0 - window.pageYOffset) * 0.5;\n          window.scroll(0, s);\n\n          if (window.pageYOffset === 0) {\n            clearInterval(scrollToTop);\n          }\n        }, 60);\n      } else {\n        if (wait) {\n          setTimeout(() => {\n            window.scroll(0, 0);\n          }, time);\n        } else {\n          window.scroll(0, 0);\n        }\n      }\n\n      if (queryParams) {\n        this.router.navigate([path], {\n          queryParams\n        });\n      } else {\n        this.router.navigate([path]);\n      }\n    }\n\n    getQueryParamse(name) {\n      let result;\n      this.activatedRoute.queryParams.subscribe(queryParams => {\n        result = queryParams[name];\n      });\n      return result;\n    }\n\n  }\n\n  RouterEventService.ɵfac = function RouterEventService_Factory(t) {\n    return new (t || RouterEventService)(i0.ɵɵinject(i1.ActivatedRoute), i0.ɵɵinject(i1.Router));\n  };\n\n  RouterEventService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RouterEventService,\n    factory: RouterEventService.ɵfac,\n    providedIn: 'root'\n  });\n  return RouterEventService;\n})();","map":null,"metadata":{},"sourceType":"module"}