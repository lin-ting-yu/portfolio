{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { scrollEffect } from './scroll-effect-list.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../tool-function.service\";\nimport * as i2 from \"src/app/pageBase/_service/animation-frame.service\";\nconst _c0 = [\"effectContent\"];\n\nconst _c1 = function (a0, a1) {\n  return [a0, a1];\n};\n\nconst _c2 = [\"*\"];\nexport let ScrollEffectComponent = /*#__PURE__*/(() => {\n  class ScrollEffectComponent {\n    constructor(toolFn, anFrame) {\n      this.toolFn = toolFn;\n      this.anFrame = anFrame; // @Input() mirror = true;\n\n      this.effectType = scrollEffect.fadeUp;\n      this.activePosition = 3.5;\n      this.onScrollShow = new EventEmitter(); // private check = false;\n\n      this.effectList = scrollEffect;\n      this.scrollTop = 0;\n      this.showheight = null;\n      this.show = false;\n      this.toBottom = false;\n      this.effectContentSize = null;\n    }\n\n    effectTypeClass() {\n      if (this.effectType === this.effectList.fadeUp) {\n        return 'fade-up';\n      } else if (this.effectType === this.effectList.null) {\n        return 'null';\n      }\n    }\n\n    setEffectContentSize() {\n      this.effectContentSize = this.effectContent.nativeElement.getBoundingClientRect();\n    }\n\n    setShowheight() {\n      this.showheight = this.effectContentSize.top + window.pageYOffset - window.innerHeight + window.innerHeight / this.activePosition;\n    }\n\n    watchBottom() {\n      this.toBottom = document.body.scrollHeight - (window.pageYOffset + window.innerHeight) <= 20;\n    }\n\n    checkActiveHeight() {\n      this.setEffectContentSize();\n      this.setShowheight();\n    }\n\n    checkShow() {\n      this.show = this.scrollTop >= this.showheight || this.toBottom;\n    }\n\n    handleScroll() {\n      if (this.scrollTop === window.pageYOffset) {\n        return;\n      }\n\n      this.scrollTop = window.pageYOffset;\n      this.checkActiveHeight();\n      this.watchBottom();\n      this.checkShow();\n      this.onScrollShow.emit(this.show);\n    }\n\n    afterGetDOM() {\n      this.setEffectContentSize();\n      this.setShowheight();\n      this.watchBottom();\n      this.anFrame.bindingAniamtionFrame(() => this.handleScroll());\n    }\n\n    ngOnInit() {\n      this.scrollTop = window.pageYOffset;\n    }\n\n    ngAfterViewInit() {\n      this.toolFn.reCheck(this, () => this.effectContent, this.afterGetDOM);\n    }\n\n  }\n\n  ScrollEffectComponent.ɵfac = function ScrollEffectComponent_Factory(t) {\n    return new (t || ScrollEffectComponent)(i0.ɵɵdirectiveInject(i1.ToolFunctionService), i0.ɵɵdirectiveInject(i2.AnimationFrameService));\n  };\n\n  ScrollEffectComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ScrollEffectComponent,\n    selectors: [[\"app-scroll-effect\"]],\n    viewQuery: function ScrollEffectComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.effectContent = _t.first);\n      }\n    },\n    inputs: {\n      effectType: \"effectType\",\n      activePosition: \"activePosition\"\n    },\n    outputs: {\n      onScrollShow: \"onScrollShow\"\n    },\n    ngContentSelectors: _c2,\n    decls: 4,\n    vars: 4,\n    consts: [[1, \"scroll-effect-content\", 3, \"ngClass\"], [\"effectContent\", \"\"], [1, \"move-content\"]],\n    template: function ScrollEffectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵprojection(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(1, _c1, ctx.effectTypeClass(), ctx.show ? \"show\" : \"\"));\n      }\n    },\n    styles: [\".scroll-effect-content[_ngcontent-%COMP%]   .move-content[_ngcontent-%COMP%]{transition:opacity 2s,transform 2s}.scroll-effect-content[_ngcontent-%COMP%]:not(.show).fade-up   .move-content[_ngcontent-%COMP%]{transform:translateY(100px);opacity:0}\"]\n  });\n  return ScrollEffectComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}