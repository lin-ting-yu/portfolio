{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let HistoryMapService = /*#__PURE__*/(() => {\n  class HistoryMapService {\n    constructor() {} // 重複Selector直到取得.point 後執行callback\n    // 重複取得100次 (10秒) 後跳錯誤\n\n\n    getLinePointList(nativeElement, path, callback, parent) {\n      let times = 0;\n      const CheckSetInterval = setInterval(() => {\n        const points = nativeElement.querySelectorAll('.points .point');\n        times++;\n\n        if (points.length > 0) {\n          clearInterval(CheckSetInterval);\n          let result = [...points];\n\n          if (callback) {\n            callback.call(parent, result);\n          }\n\n          return result;\n        } else if (times > 10000) {\n          console.error('no \".point\" in \".points\" in \"' + path + '\"');\n          clearInterval(CheckSetInterval);\n        }\n      }, 10);\n    } // 算出data長度\n\n\n    getDataLength(data) {\n      let result = 0;\n      const rasultArray = [0];\n      const lastI = data.length - 1;\n      data.forEach((item, i) => {\n        if (i === lastI) {\n          return false;\n        }\n\n        result++;\n\n        if (item.type === 'important' && i > 0) {\n          result++;\n          rasultArray[rasultArray.length - 1]++;\n        }\n\n        rasultArray.push(1);\n      });\n      return [result, rasultArray];\n    } // 算出point gap\n\n\n    setPointGap(allPoint, dataLangth) {\n      return Math.floor((allPoint - 1) / dataLangth);\n    }\n\n  }\n\n  HistoryMapService.ɵfac = function HistoryMapService_Factory(t) {\n    return new (t || HistoryMapService)();\n  };\n\n  HistoryMapService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HistoryMapService,\n    factory: HistoryMapService.ɵfac,\n    providedIn: 'root'\n  });\n  return HistoryMapService;\n})();","map":null,"metadata":{},"sourceType":"module"}